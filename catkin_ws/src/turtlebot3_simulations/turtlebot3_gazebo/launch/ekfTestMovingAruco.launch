<launch>
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="x_pos" default="0.0"/>
  <arg name="y_pos" default="0.0"/>
  <arg name="z_pos" default="0.0"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/empty_arucoForEkf.world"/>

<?ignore
    <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot_aruco.world"/>
?>

    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="false"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />

  <?ignore
  <!-- The motion model node -->
  <node name="motion_model" pkg="turtlebot3_gazebo" type="motion_model" output="screen"/>
  ?>

  <?ignore
  <!-- The ekf_lidarTest node -->
  <node name="ekf_lidarTest" pkg="turtlebot3_gazebo" type="ekf_lidarTest" output="screen"/>
  ?>


  <?ignore
  <!-- The ekfSingleBlock node -->
  <node name="ekf_Test" pkg="turtlebot3_gazebo" type="ekf_Test" output="screen"/>
  ?>

  <?ignore
  <!-- The ekfSingleBlockMoving node -->
  <node name="ekf_TestMoving" pkg="turtlebot3_gazebo" type="ekf_TestMoving" output="screen"/>
  ?>

  <!-- The ekfArucoMoving node -->
  <node name="ekf_TestMovingAruco" pkg="turtlebot3_gazebo" type="ekf_TestMovingAruco" output="screen"/>



  <!-- Aruco Marker publishing node -->
    <arg name="markerSize"      default="0.1778"/>    <!-- in m -->
    <arg name="side"             default="left"/>
    <?ignore
    <arg name="ref_frame"       default="base"/>  <!-- leave empty and the pose will be published wrt param parent_name -->
    ?>
    <arg name="ref_frame"       default="base_footprint"/>  <!-- leave empty and the pose will be published wrt param parent_name -->

    <node pkg="aruco_ros" type="marker_publisher" name="aruco_marker_publisher">
        <remap from="/camera_info" to="/camera/rgb/camera_info" />
        <remap from="/image" to="/camera/rgb/image_raw" />
        <param name="image_is_rectified" value="True"/>
        <param name="marker_size"        value="$(arg markerSize)"/>
        <param name="reference_frame"    value="$(arg ref_frame)"/>   <!-- frame in which the marker pose will be refered -->
        <!-- param name="camera_frame"       value="$(arg side)_hand_camera"/ -->
    <param name="camera_frame" value="$(arg ref_frame)"/>
  </node>

</launch>
